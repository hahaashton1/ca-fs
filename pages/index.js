import Head from 'next/head'
import React, { useState } from 'react';
import Papa from 'papaparse';

export default function Home() {

  const [file, setFile] = useState(null);
  const [tableJSON, setTableJSON] = useState(null);

  const handleImport = (e) => {
    setFile(e.target.files[0]);
  }

  const handleSubmit = (e) => {
    e.preventDefault();

    const fileReader = new FileReader();

    if (file) {
      fileReader.onload = (event) => {
        const data = event.target.result;
        //console.log(data);
        const csv = Papa.parse(data, {header: true});
        setTableJSON(csv.data);
        // This works
        console.log(csv);
      }
      fileReader.readAsText(file);
    }
  }

  return (
    <div>
      <Head>
        <title>CAAR</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="grid place-items-center justify-center">
          <div className="grid grid-cols-1 gap-6 content-center max-w-screen-lg h-screen">
            <div className="card w-96 bg-primary text-primary-content">
              <div className="card-body">
                <h2 className="card-title">File Upload</h2>
                <p>If a dog chews shoes whose shoes does he choose?</p>
                <input type={"file"} accept={".csv"} onChange={handleImport}/>
                <div className="card-actions justify-end">
                  <button className="btn" onClick={(e)=>{handleSubmit(e);}}>Upload</button>
                </div>
              </div>
            </div>
            <div>
              {/* if tableJSON is not null, then display table */}

              {tableJSON && (
                <table className="table w-full">
                  <thead>
                    <tr>
                      <th>UT-Code</th>
                      <th>Application</th>
                      <th>Profile</th>
                    </tr>
                  </thead>
                  <tbody>
                    {tableJSON.map((row, index) => (
                      <tr key={index}>
                        <td>{row.utcode}</td>
                        <td>{row.application}</td>
                        <td>{row.profile}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              )}
            </div>
          </div>
        </div>
      </main>

      <footer>
      </footer>
    </div>
  )
}
